---
title: "Data visualizations of climate hazards data"
format: html
author: Charlie Curtin
---

```{r, message = FALSE}
# load packages
library(tidyverse)
library(sf)
library(terra)
library(ggspatial)
library(here)
library(patchwork)
library(cowplot)
```


# read in data

```{r, message = FALSE}
# districts and hazards
districts_hazards <- st_read(here("data", "hazard_summary", "hazard_summary", "districts_hazards.gpkg")) %>% 
  st_transform(crs = 3310) %>% 
  # rename geometry column
  rename(geometry = geom)

# CA boundary
ca <- st_read(here("data", "school_districts", "CA_boundary")) %>% 
  st_transform(crs = 3310)
```


### Extreme heat

- map of districts by extreme heat days past and present
- map of districts by change in extreme heat days

```{r}
## map of districts by observed extreme heat days, on the same scale as projected --------------------
heat_obs_days <- ggplot(data = districts_hazards) +
  # fill polygons by observed extreme heat days
  geom_sf(aes(fill = heat_days_hist),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove grid lines
  theme_void() +
  # add plot title
  labs(title = "Observed Days (2008 - 2013)") +
  # create manual legend
  scale_fill_distiller(palette = "Oranges", 
                       direction = 1, 
                       name = "",
                       limits = c(0, 1197),
                       breaks = c(0, 240, 479, 719, 958, 1197)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") +
  # add scale bar and manually position it
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## map of districts by projected extreme heat days ----------------------------------------------
heat_proj_days <- ggplot(data = districts_hazards) +
  # fill polygons by projected extreme heat days
  geom_sf(aes(fill = heat_days),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove grid lines
  theme_void() +
  # add plot title
  labs(title = "Projected Days (2030 - 2035)") +
  # create manual legend
  scale_fill_distiller(palette = "Oranges", 
                       direction = 1, 
                       name = "",
                       limits = c(0, 1197),
                       breaks = c(0, 240, 479, 719, 958, 1197)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## map of districts by change between projected and observed ------------------------
heat_diff_days <- ggplot(data = districts_hazards %>% 
         mutate(increase = heat_days - heat_days_hist)) +
  # fill polygons by observed extreme heat days
  geom_sf(aes(fill = increase),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove grid lines
  theme_void() +
  # add plot title
  labs(title = "Projected Increase in Days") +
  # create manual legend
  scale_fill_distiller(type = "div", 
                       palette = "PuOr",
                       name = "",
                       breaks = c(-652, -300, 0, 300, 689)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## stitch them together --------------------------------------------------------------------------------
heat_days_maps <- heat_obs_days + heat_proj_days + heat_diff_days + 
  # place all 3 plots side-by-side
  plot_layout(ncol = 3) + 
  # add title to the three plots
  plot_annotation(title = "Observed, Projected, and Projected Increase in Extreme Heat Days",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("heat_days_maps.jpg", plot = heat_days_maps, width = 10, height = 6, 
       path = "/Users/charliecurtin 1/Desktop/images")
```

- map of districts by extreme heat score (projected and observed)
- map of districts by change in heat score

```{r}
## map of districts by observed heat days hazard score ---------------------------------------------
heat_obs_score <-ggplot(data = districts_hazards %>% 
                     mutate(heat_score_hist = factor(heat_score_hist, levels = c(0, 1, 2, 3, 4, 5)))) +
  # fill polygons by heat score
  geom_sf(aes(fill = heat_score_hist),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Observed Scores (2008 - 2013)") +
  # create legend
  scale_fill_brewer(type = "seq", 
                    palette = "Oranges",
                    name = "",
                    # force legend to go to 5 even if no districts have a value of 5
                    drop = FALSE,
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") +
  # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## map of districts by projected extreme heat hazard score -----------------------------------------
heat_proj_score <- ggplot(data = districts_hazards %>% 
                       mutate(heat_score = as.factor(heat_score))) +
  # fill polygons by heat score
  geom_sf(aes(fill = heat_score),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Projected Scores (2030 - 2035)") +
  # create legend
  scale_fill_brewer(type = "seq", 
                    palette = "Oranges",
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## map of districts by change in heat score --------------------------------------------------------
heat_diff_score <- ggplot(data = districts_hazards %>% 
                       mutate(heat_score_diff = as.factor(heat_score - heat_score_hist))) +
  # fill polygons by heat score
  geom_sf(aes(fill = heat_score_diff),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Projected Increase in Scores") +
  # create legend
  scale_fill_manual(values = c("#542788", "#b2abd2", "white", "#fee0b6", "#fdb863", "#b35806"),
                    name = "",
                    guide = guide_legend(reverse = TRUE)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## stitch them together ------------------------------------------------------------------------
heat_score_maps <- heat_obs_score + heat_proj_score + heat_diff_score + 
  plot_layout(ncol = 3) + 
  plot_annotation(title = "Comparison of Observed, Projected and Projected Increase in Heat Scores",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("heat_score_maps.jpg", plot = heat_score_maps, width = 10, height = 6, 
       path = "/Users/charliecurtin 1/Desktop/images")
```

### Extreme precipitation

- map of districts by extreme precip days past and present
- map of districts by change in extreme precip days

```{r}
## map of districts by projected extreme precipitation days -------------------------------------
precip_proj_days <- ggplot(data = districts_hazards) +
  # fill polygons by projected extreme precip days
  geom_sf(aes(fill = precip_days),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  theme_void() +
  labs(title = "Projected Days (2030 - 2035)") +
  scale_fill_distiller(palette = "Blues", 
                       direction = 1, 
                       name = "",
                       limits = c(0, 876),
                       breaks = c(0, 176, 351, 525, 700, 876)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") +
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## map of districts by observed extreme precipitation days ------------------------------------
precip_obs_days <- ggplot(data = districts_hazards) +
  # fill polygons by observed extreme precip days
  geom_sf(aes(fill = precip_days_hist),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  theme_void() +
  labs(title = "Observed Days (2008 - 2013)") +
  scale_fill_distiller(palette = "Blues", 
                       direction = 1, 
                       name = "",
                       limits = c(0, 876),
                       breaks = c(0, 176, 351, 525, 700, 876)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## map of districts by change in extreme precipitation days -----------------------------------------
precip_diff_days <- ggplot(data = districts_hazards %>% 
         mutate(increase = precip_days - precip_days_hist)) +
  # fill polygons by observed extreme heat days
  geom_sf(aes(fill = increase),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  theme_void() +
  labs(title = "Projected Increase in Days") +
  scale_fill_distiller(palette = "Blues",
                       direction = 1,
                       breaks = c(-2, 200, 400, 600, 815),
                       name = "") +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## stitch them together --------------------------------------------------------------------------
precip_days_maps <- precip_proj_days + precip_obs_days + precip_diff_days + 
  plot_layout(ncol = 3) + 
  plot_annotation(title = "Projected, Observed, and Projected Increase in Extreme Precipitation Days",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("precip_days_maps.pdf", plot = precip_days_maps, width = 10, height = 6, 
       path = "/Users/charliecurtin 1/Desktop/images")
```

- map of districts by extreme precip score (projected and observed)
- map of districts by change in precip score

```{r}
## map of projected extreme precipitation score --------------------------------------------------------
precip_proj_score <- ggplot(data = districts_hazards %>% 
                       mutate(precip_score = as.factor(precip_score))) +
  # fill polygons by heat score
  geom_sf(aes(fill = precip_score),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Projected Score (2030 - 2035)") +
  # create legend
  scale_fill_brewer(type = "seq", 
                    palette = "Blues",
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") +
  # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## map of observed extreme precipitation score ---------------------------------------------------------
precip_obs_score <- ggplot(data = districts_hazards %>% 
                       mutate(precip_score_hist = as.factor(precip_score_hist))) +
  # fill polygons by heat score
  geom_sf(aes(fill = precip_score_hist),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Observed Score (2008 - 2013)") +
  # create legend
  scale_fill_brewer(type = "seq", 
                    palette = "Blues",
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## map of districts by change in precip score -----------------------------------------------
precip_diff_score <- ggplot(data = districts_hazards %>% 
                       mutate(precip_score_diff = as.factor(precip_score - precip_score_hist))) +
  # fill polygons by precip score difference
  geom_sf(aes(fill = precip_score_diff),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Difference") +
  # create legend
  scale_fill_manual(values = c("#d6604d", "white", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"),
                    name = "",
                    guide = guide_legend(reverse = TRUE)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")

## stitching them together --------------------------------------------------------------------------
precip_score_maps <- precip_proj_score + precip_obs_score + precip_diff_score + 
  plot_layout(ncol = 3) + 
  plot_annotation(title = "Comparison of Projected, Observed, and Difference in Precipitation Scores",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("precip_score_maps.pdf", plot = precip_score_maps, width = 10, height = 6, 
       path = "/Users/charliecurtin 1/Desktop/images")
```

- histograms

```{r}
## histogram of projected extreme precip days -----------------------------------------------------
ggplot(districts_hazards) + 
  geom_histogram(aes(precip_days), fill = "skyblue", color = "black") +
  theme_minimal()

## histogram of historical extreme precip days ----------------------------------------------------
ggplot(districts_hazards) + 
  geom_histogram(aes(precip_days_hist), fill = "skyblue", color = "black") +
  theme_minimal()

## histogram of difference ---------------------------------------------------------------------
ggplot(districts_hazards %>% 
         mutate(days_diff = heat_days - heat_days_hist)) +
  geom_histogram(aes(days_diff), fill = "orange", color = "black") +
  theme_minimal()

## bar chart of extreme precip score -------------------------------------------------------------
ggplot(districts_hazards) + 
  geom_bar(aes(precip_score), fill = "skyblue", color = "black") +
  theme_minimal()

 ## bar chart of historical extreme precip score ---------------------------
ggplot(districts_hazards) + 
  geom_bar(aes(precip_score_hist), fill = "skyblue", color = "black") +
  theme_minimal()

## bar chart of difference ----------------------------------------------
ggplot(districts_hazards %>% 
         mutate(heat_diff = heat_score - heat_score_hist)) +
  geom_bar(aes(heat_diff), fill = "skyblue", color = "black") +
  theme_minimal()
```



### wildfire

```{r}
# read in whp for 2015
whp_2015 <- rast(here("data", "wildfire", "intermediate", "whp_2012_reclass.tif"))

# read in whp for 2023
whp_2023 <- rast(here("data", "wildfire", "intermediate", "whp_reclass.tif"))
```

- map of California whp for 2023 and 2015 side-by-side

```{r}
## map preparation -------------------------------------------------------------------------------------
# convert rasters to a dataframe first
whp_2015_df <- as.data.frame(whp_2015, xy = TRUE) %>% 
  mutate(whp_2012 = as.factor(whp_2012))

whp_2023_df <- as.data.frame(whp_2023, xy = TRUE) %>% 
  rename(whp_2023 = Band_1) %>% 
  mutate(whp_2023 = as.factor(whp_2023))

# define color scheme and labels
labels <- c("Developed or open water", "Very low", "Low", "Moderate", "High", "Very high")
whp_colors <- c("grey", "#fee391", "#fec44f", "#fe9929", "#d95f0e", "#993404")

## map of whp reclass for 2023 -------------------------------------------------------------------------
whp_reclass_2023 <- ggplot(data = whp_2023_df) +
  geom_raster(aes(x = x, y = y, fill = whp_2023)) +
  scale_fill_manual(values = whp_colors,
                    labels = labels,      
                    na.value = "transparent", 
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  coord_equal() +
  theme_void() +
  labs(title = "Wildfire Hazard Potential 2023") +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") +
  # add scale bar and manually position it
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## map of whp reclass for 2015 -------------------------------------------------------------------------
whp_reclass_2015 <- ggplot(data = whp_2015_df) +
  geom_raster(aes(x = x, y = y, fill = whp_2012)) +
  scale_fill_manual(values = whp_colors,
                    labels = labels,      
                    na.value = "transparent", 
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  coord_equal() +
  theme_void() +
  labs(title = "Wildfire Hazard Potential 2015") +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") 

## stitching them together -----------------------------------------------------------------------------
whp_reclass_maps <- whp_reclass_2023 + whp_reclass_2015 +
  plot_layout(ncol = 2) + 
  plot_annotation(title = "Wildfire Hazard Potential Comparison",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("whp_reclass_maps.pdf", plot = whp_reclass_maps, width = 9, height = 6, 
       path = "/Users/charliecurtin 1/Desktop/images")
```

- map of California whp score for 2023, 2015, and side-by-side

```{r}
# define color scheme and labels
labels <- c("Developed or open water", "Very low", "Low", "Moderate", "High", "Very high")
whp_colors <- c("grey", "#fee391", "#fec44f", "#fe9929", "#d95f0e", "#993404")

## map of 2023 whp score-------------------------------------------------------------------------------
whp_score_2023 <- ggplot(data = districts_hazards %>% 
         mutate(whp_score = as.factor(whp_score))) +
  # fill polygons by whp score
  geom_sf(aes(fill = whp_score),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "2023 Score") +
  # create legend
  scale_fill_manual(values = whp_colors,
                    na.value = "transparent", 
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot") +
  # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## map of 2015 whp score -------------------------------------------------------------------------------
whp_score_2015 <- ggplot(data = districts_hazards %>% 
         mutate(whp_score_hist = as.factor(whp_score_hist))) +
  # fill polygons by whp score
  geom_sf(aes(fill = whp_score_hist),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "2015 Score") +
  # create legend
  scale_fill_manual(values = whp_colors,
                    na.value = "transparent", 
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")
  # # add scale bar and manually position it 
  # annotation_scale(style = "ticks",
  #                  unit_category = "imperial",
  #                  width_hint = .4,
  #                  pad_x = unit(.4, "in"),
  #                  pad_y = unit(.2, "in")) +
  # # add north arrow and manually position it 
  # annotation_north_arrow(style = north_arrow_orienteering(),
  #                        height = unit(.4, "in"),
  #                        width = unit(.25, "in"),
  #                        pad_x = unit(.4, "in"),
  #                        pad_y = unit(.4, "in"))

## map of the difference in scores ---------------------------------------------------------------------
# define color palette
whp_diff_colors <- c("#4575b4", "#abd9e9", "white", "#fec44f", "#fe9929")

# map it
whp_score_diff <- ggplot(data = districts_hazards %>% 
         mutate(whp_diff = as.factor(whp_score - whp_score_hist))) +
  # fill polygons by whp score
  geom_sf(aes(fill = whp_diff),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Difference") +
  # create legend
  scale_fill_manual(values = whp_diff_colors,
                    na.value = "transparent", 
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot")
  # # add scale bar and manually position it 
  # annotation_scale(style = "ticks",
  #                  unit_category = "imperial",
  #                  width_hint = .4,
  #                  pad_x = unit(.4, "in"),
  #                  pad_y = unit(.2, "in")) +
  # # add north arrow and manually position it 
  # annotation_north_arrow(style = north_arrow_orienteering(),
  #                        height = unit(.4, "in"),
  #                        width = unit(.25, "in"),
  #                        pad_x = unit(.4, "in"),
  #                        pad_y = unit(.4, "in"))

## stitch them together --------------------------------------------------------------------------------
whp_score_maps <- whp_score_2023 + whp_score_2015 + whp_score_diff +
  plot_layout(ncol = 3) + 
  plot_annotation(title = "Wildfire Hazard Potential Score Comparison",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("whp_score_maps.pdf", plot = whp_score_maps, width = 10, height = 6, 
       path = "/Users/charliecurtin 1/Desktop/images")
```



### sea level rise

```{r}
# read in ca slr data
ca_slr_simple <- st_read(here("data", "sea_level_rise", "intermediate", "ca_slr_simple.shp")) %>% 
  st_transform(crs = 3310)

ca_slr_2000_simple <- st_read(here("data", "sea_level_rise", "intermediate", "ca_slr_2000_simple.shp")) %>% 
  st_transform(crs = 3310)

# subset school districts that will experience sea level rise
districts_sub <- districts_hazards[ca_slr_simple, ]
```

- map of 2000 sea level rise
- map of 2050 sea level rise 
- selected sf bay area

```{r}
# select bay area schools and create a bounding box ----------------------------------------------------
bay_dist <- districts_sub %>% 
  slice_max(slr_percent, n = 8) %>% 
  filter(!(CountyName %in% c("Solano")))

bay_slr <- st_crop(ca_slr_simple, bay_dist)

bay_bbox <- st_bbox(bay_slr)

# store coordinates of bbox
xmin <- -200000
ymin <- -65186.72
xmax <- -170980.70
ymax <- -40382.07 

## map of districts expected to experience sea level rise in 2050 ------------------------------------
slr_dist <- ggplot(data = districts_hazards) +
  geom_sf(fill = NA, color = "black", lwd = 0.1) +
  geom_sf(data = districts_sub, fill = "orange", lwd = NA) +
  geom_sf(data = ca, fill = NA, color = "black") +
  theme_void() +
  # add title
  labs(title = "School Districts Expected to\nExperience Sea Level Rise in 2050") +
  # make title font bold
  theme(plot.title = element_text(face = "bold", hjust = .5)) +
  # add bounding box for inset
  geom_rect(xmin = xmin,
            ymin = ymin,
            xmax = xmax,
            ymax = ymax,
            fill = NA,
            color = "red",
            lwd = 1) +
  # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## save map --------------------------------------------------------------------------------------------
ggsave("slr_dist.pdf", plot = slr_dist, width = 5, height = 5, 
       path = "/Users/charliecurtin 1/Desktop/images")
```

- 2050 and 2000 sea levels side-by-side
```{r}
## plotting 2050 sea levels ----------------------------------------------------------------------------
bay_slr_2050 <- ggplot(data = ca_slr_simple) +
  geom_sf(data = districts_sub, 
          fill = "#e3e3e3",
          color = "black") +
  # add 2050 slr polygons
  geom_sf(fill = "cornflowerblue", 
          lwd = NA) +
  # crop map extent to the bounding box of south sf bay sea level rise
  coord_sf(xlim = c(-205000, bay_bbox["xmax"]),
           ylim = c(bay_bbox["ymin"], bay_bbox["ymax"]),     
           expand = FALSE) +                                  
  labs(title = "2050") +
  theme_void() +
  # center plot title and add frame
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        panel.border = element_rect(color = "black",
                                    fill = NA,        
                                    linewidth = 1)) +
   # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .25,
                   location = "bl") +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_y = unit(.3, "in"))

## mapping 2000 levels --------------------------------------------------------------------------------
bay_slr_2000 <- ggplot(data = ca_slr_2000_simple) +
  geom_sf(data = districts_sub, 
          fill = "#e3e3e3",
          color = "black") +
  # add 2000 slr polygons
  geom_sf(fill = "cornflowerblue", 
          lwd = NA) +
  # crop map extent to the bounding box of south sf bay sea level rise
  coord_sf(xlim = c(-205000, bay_bbox["xmax"]),
           ylim = c(bay_bbox["ymin"], bay_bbox["ymax"]),     
           expand = FALSE) +                                  
  labs(title = "2000") +
  theme_void() +
  # center plot title and add frame
  theme(plot.title = element_text(hjust = 0.5),
        plot.title.position = "plot",
        panel.border = element_rect(color = "black",
                                    fill = NA,        
                                    linewidth = 1))

## stitch them together --------------------------------------------------------------------------------
slr_poly_maps <- bay_slr_2050 + bay_slr_2000 +
  plot_layout(ncol = 2) + 
  plot_annotation(title = "Comparison between 2050 and 2000 Sea Levels and a 100-year Coastal Storm",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("slr_poly_maps.pdf", plot = slr_poly_maps, width = 10, height = 6, 
       path = "/Users/charliecurtin 1/Desktop/images")

```



### flooding

# read in flooding data

```{r}
# read in high risk flood zone polygons
flood_poly <- st_read(here("data", "flooding", "intermediate", "flooding_simple.shp")) %>% 
  st_transform(crs = 3310)

# subset districts to high flood area (Central Valley)
flood_dist_sub <- districts_hazards %>% 
  filter(CountyName %in% c("Solano", "Sacramento", "Yolo"))

# clip flood polygons to high flood area
flood_poly_cv <- st_intersection(flood_poly, flood_dist_sub)

# create bounding box from districts
cv_bbox <- st_bbox(flood_dist_sub)

# save coordinates
xmin <- cv_bbox[["xmin"]]
ymin <- cv_bbox[["ymin"]]
xmax <- cv_bbox[["xmax"]]
ymax <- cv_bbox[["ymax"]]
```


- map of high risk flood zones overlaid on school districts

```{r}
# map of districts within high risk flood zones -----------------------------------------------------------
high_risk_flood_ca <- ggplot(data = districts_hazards) +
  geom_sf(fill = NA, color = "black", lwd = NA) +
  geom_sf(data = flood_poly, fill = "darkblue", lwd = NA) +
  geom_sf(data = ca, fill = NA, color = "black") +
  theme_void() +
  # add title
  labs(title = "High Risk Flood Areas within California") +
  # make title font bold
  theme(plot.title = element_text(face = "bold", hjust = .5)) +
  # add bounding box for inset
  geom_rect(xmin = xmin,
            ymin = ymin,
            xmax = xmax,
            ymax = ymax,
            fill = NA,
            color = "red",
            lwd = 1) +
  # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

# save it
ggsave("high_risk_flood_ca.jpg", plot = high_risk_flood_ca, width = 4, height = 5,
       path = "/Users/charliecurtin 1/Desktop/images")


## map of central valley high risk flood zones ----------------------------------------------------------
high_risk_flood_cv <- ggplot(data = flood_dist_sub) +
  # add high risk flood polygons
  geom_sf(data = flood_poly_cv, 
          fill = "cornflowerblue", 
          color = NA,
          lwd = NA) +
  geom_sf(fill = NA, 
          color = "black",
          lwd = 0.5) +
  # the bounding box of central valley bay sea level rise
  coord_sf(xlim = c(cv_bbox["xmin"], cv_bbox["xmax"]),
           ylim = c(cv_bbox["ymin"], cv_bbox["ymax"]),     
           expand = FALSE) +  
  # add title
  labs(title = "Central Valley High Risk Flood Areas") +
  # remove lat/long graticules
  theme_void() +
  # center plot title and add frame
  theme(plot.title = element_text(face = "bold", hjust = 0.5),
        plot.title.position = "plot") +
   # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .25,
                   location = "br") +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_y = unit(.3, "in"),
                         location = "br")

# save it
ggsave("high_risk_flood_cv.jpg", plot = high_risk_flood_cv, width = 6, height = 5,
       path = "/Users/charliecurtin 1/Desktop/images")
```

- flood score 
- flooding percent?

```{r}
## map of flood score --------------------------------------------------------
ggplot(data = districts_hazards %>% 
         mutate(flood_score = as.factor(flood_score))) +
  # fill polygons by heat score
  geom_sf(aes(fill = flood_score),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  # remove lat/long graticules
  theme_void() +
  # add title
  labs(title = "Flooding Score") +
  # create legend
  scale_fill_brewer(type = "seq", 
                    palette = "Blues",
                    name = "",
                    # reverse position of breaks in legend
                    guide = guide_legend(reverse = TRUE)) +
  # manually adjust legend position and center plot title
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(face = "bold", hjust = 0.5),
        plot.title.position = "plot") +
  # add scale bar and manually position it 
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  # add north arrow and manually position it 
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))

## map of flooding percent ------------------------------------------------------------------------------
ggplot(data = districts_hazards) +
  # fill polygons by flooding_percent
  geom_sf(aes(fill = flood_percent),
          lwd = 0,
          color = NA) +
  # add CA boundary
  geom_sf(data = ca, fill = NA, color = "black", size = 0.5) +
  theme_void() +
  labs(title = "Percent Flooding") +
  scale_fill_distiller(palette = "Blues", 
                       direction = 1, 
                       name = "",
                       limits = c(0, 100),
                       breaks = c(0, 20, 40, 60, 80, 100)) +
  # manually change legend position
  theme(legend.justification = c(0, 1),
        legend.position = c(.6, 1),
        plot.title = element_text(face = "bold", hjust = 0.5),
        plot.title.position = "plot") +
  annotation_scale(style = "ticks",
                   unit_category = "imperial",
                   width_hint = .4,
                   pad_x = unit(.4, "in"),
                   pad_y = unit(.2, "in")) +
  annotation_north_arrow(style = north_arrow_orienteering(),
                         height = unit(.4, "in"),
                         width = unit(.25, "in"),
                         pad_x = unit(.4, "in"),
                         pad_y = unit(.4, "in"))
```

## total hazard score

- hazard score of projected/present
- hazard score of historical
```{r}
## hazard score of projected/present
bar_1 <- ggplot(districts_hazards %>% 
         mutate(hazard_score = as.factor(hazard_score))) +
  geom_bar(aes(x = hazard_score), fill = "darkolivegreen4") +
  # set y breaks
  scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250),
                     limits = c(0, 275)) +
  # add labels
  labs(x = "hazard score", y = "count of districts", title = "Projected") +
  theme_minimal() +
  # center title
  theme(plot.title = element_text(hjust = 0.5))

## hazard score of historical ----------------------------------------------------------------------------
# set x breaks
breaks <- as.character(2:13)

# plot
bar_2 <- ggplot(districts_hazards %>% 
         mutate(hazard_score_hist = as.factor(hazard_score_hist))) +
  # create a bar chart
  geom_bar(aes(x = hazard_score_hist), fill = "darkolivegreen4") +
  # set manual x breaks
  scale_x_discrete(limits = breaks) +
  # set y breaks
  scale_y_continuous(breaks = c(0, 50, 100, 150, 200, 250),
                     limits = c(0, 275)) +
  # add labels
  labs(x = "hazard score", y = "", title = "Historical") +
  theme_minimal() +
  # center title
  theme(plot.title = element_text(hjust = 0.5))

## stitch them together ------------------------------------------------------------------------------
hazard_score_plot <- bar_1 + bar_2 +
  plot_layout(ncol = 2) +
  plot_annotation(title = "Projected and Historic Hazard Score District Counts",
                  theme = theme(plot.title = element_text(face = "bold", size = 16)))

# save plot
ggsave("hazard_score_plot.jpg", plot = hazard_score_plot, width = 10, height = 5, 
       path = "/Users/charliecurtin 1/Desktop/images")
  
```

