---
title: "Preparing the wildfire raster for visualization"
format: html
author: "Charlie Curtin"
---

```{r, message = FALSE}
# load packages
library(sf)
library(tidyverse)
library(terra)
library(here)
library(tmap)
library(leaflet)
```

```{r}
# read in wildfire data
whp_us <- rast(here("data/wildfire/raw/whp2023_cls_conus.tif"))

# convert raster to be a factor
whp_us <- as.factor(whp_us)
#plot(whp_us)

# read in school districts
districts <- st_read(here("data", "school_districts"), quiet = TRUE)
```

# create a boundary for California to clip our raster to

### clip wildfire raster to California

The raster is categorical on a scale from 1-7, but the values are read in as integers, so we'll convert it to a factor for reprojecting and cropping the raster. Our second step is to reproject the whp raster to be on the same coordinate reference system as our school districts.
```{r}
# convert raster to be a factor
whp_us <- as.factor(whp_us)

# reproject the whp raster to be on the same coordinate reference system as the California polygon
whp_us <- project(whp_us, districts)

# crop to the extent of the California boundary
whp_ca <- crop(whp_us, districts, mask = TRUE, touches = TRUE)

# save output shapefile as an intermediate layer
#writeRaster(whp_ca, here("data", "wildfire", "intermediate", "whp_ca.tif"))

# read in wildfire hazard potential for California
whp_ca <- rast(here("data", "wildfire", "intermediate", "whp_ca.tif"))
```
### assign wildfire hazard potential values to school districts

From the metadata, the classifications in the data are as follows:

Values:
1- very low
2- low
3- moderate
4- high
5- very high
6- non-burnable
7- water

Our process for assigning values to school districts will be to take the average value of cells that overlap with each school buffer. The categories "non-burnable" include developed areas not at risk of wildfire, and "water" also isn't at risk of burning. So, we'll reclassify these values as 0. This essentially says that they are not burnable at all, and represent no risk to the area. The average value of cells will be rounded to the nearest whole number, giving each school area a final value between 1-5, representing very low, low, moderate, high, and very high risk categories. 

```{r}
# convert the raster back into numeric form
whp_ca <- as.numeric(whp_ca)

## reclassify the whp raster values
# create a reclassification matrix
rcl_table <- matrix(c(1, 1,
                      2, 2,
                      3, 3,
                      4, 4,
                      5, 5,
                      6, 0,
                      7, 0), ncol = 2, byrow = TRUE)

# reclassify the whp raster
whp_reclass <- classify(whp_ca, rcl = rcl_table)

# check the values of the raster
unique(whp_reclass)

# write result to the data folder
#writeRaster(whp_reclass, here("data", "wildfire", "intermediate", "whp_reclass.tif"), overwrite = TRUE)

# read in reclassified raster
whp_reclass <- rast(here("data", "wildfire", "intermediate", "whp_reclass.tif"))
```

### calculating the value of wildfire hazard potential for every school district

The next step in this process is to assign wildfire hazard potential scores for every district. This involves taking every cell that overlaps with the school districts and averaging the wildfire hazard potential score. We'll include cells on the boundary without interpolating scores based on percentage of area. The rationale for this is that score corresponds to the entire cell. If a cell has a wildfire hazard potential score of 2, a district boundary cutting it in half doesn't also divide the score by 2. The entire underlying area has a score of 2. Then, these values will be rounded to the nearest whole number to be back on a scale from 1-5. Buffers with a value of 0 will remain 0, while all values greater than 0 and less than 1 will be rounded up to 1. This is a limitation of the process, in that risk becomes overstated or understated based on the rounding. One area could be a 4.4 and another a 4.6, but those then become 4 and 5, respectively.

```{r}
# crop the whp raster to each school, using the districts as a mask
whp_schools_mask <- crop(whp_reclass, districts, mask = TRUE)

#plot(whp_schools_mask)

# calculate the mean whp value of every school buffer
whp_schools <- extract(whp_schools_mask, districts, fun = "mean", na.rm = TRUE, 
                       method = "simple", touches = TRUE, bind = TRUE) %>% 
  st_as_sf() %>% 
  # rename mean output as whp
  rename(whp = Band_1)

## round the values to the nearest whole number, rounding all values less than 1 but greater than 0 up to 1
# filter for schools where whp is 0
whp_zeros <- whp_schools %>% 
  filter(whp == 0)

# filter for schools where whp is not 0 and round the values
whp_values <- whp_schools %>% 
  filter(whp != 0) %>%
  mutate(whp = round(whp, digits = 0)) %>%
  mutate(whp = ifelse(whp == 0, 1, whp))
  
# row bind the dataframes back together
whp_districts <- rbind(whp_zeros, whp_values)

# select relevant information and export to server for hazard summary calculation
whp_districts <- whp_districts %>% 
  select(CDSCode, CountyName, DistrictNa, DistrictTy, whp) %>% 
  st_drop_geometry()

#write_csv(whp_districts, here("data", "hazard_summary", "individual_tables", "districts_whp.csv"))
```

## 2012 version of the data

Preparing the 2012 version of the data serves to help mapping in the report. The 2012 data is reclassified in the same way as the 2023 data for mapping.

```{r}
# read in data
whp_2012 <- rast(here("data", "wildfire", "raw", "whp_2012"))

# convert raster to be a factor
whp_2012 <- as.factor(whp_2012)

# reproject the whp raster to be on the same coordinate reference system as the California polygon
whp_2012 <- project(whp_2012, districts)

# crop to the extent of the California boundary
whp_2012_ca <- crop(whp_2012, districts, mask = TRUE, touches = TRUE)

# convert the raster back into numeric form
whp_2012_ca <- as.numeric(whp_2012_ca)

## reclassify the whp raster values
# create a reclassification matrix
rcl_table <- matrix(c(1, 1,
                      2, 2,
                      3, 3,
                      4, 4,
                      5, 5,
                      6, 0,
                      7, 0), ncol = 2, byrow = TRUE)

# reclassify the whp raster
whp_2012_reclass <- classify(whp_2012_ca, rcl = rcl_table)

# check the values of the raster
unique(whp_2012_reclass)

# write result to the data folder
#writeRaster(whp_2012_reclass, here("data", "wildfire", "intermediate", "whp_2012_reclass.tif"), overwrite = TRUE)

# read in reclassified raster
whp_2012_reclass <- rast(here("data", "wildfire", "intermediate", "whp_2012_reclass.tif"))
```

## mapping

Finding a district that may have shown more urban development in the last few years

```{r}
# filter for one school district
## mapping the 2023 whp data
# filter for one school district
srv <- districts %>% 
  filter(DistrictNa == "San Ramon Valley Unified")

# select the wildfire hazard potential cells that overlap
whp_school <- crop(whp_reclass, srv, mask = TRUE, touches = TRUE)
```
- don't need the satellite imagery, don't need it to be transparent, want to show whp outside of the school area

# translating into tmap code
```{r}
# define color palette and labels for wildfire hazard potential
labels <- c("developed or open water", "very low", "low", "moderate", "high", "very high")
whp_colors <- c("grey", "#fee391", "#fec44f", "#fe9929", "#d95f0e", "#993404")

# tmap palette needs a named vector for categories
whp_palette <- setNames(whp_colors, labels)

# # switch to interactive mode if needed
# tmap_mode("view")  # switch to 'plot' for static maps

bbox <- st_bbox(srv)

# create the map
tm_shape(whp_school %>% as.factor(),
         bbox = bbox) +
  tm_raster(palette = whp_colors, 
            col_alpha = .8,
            legend.show = FALSE) +
  tm_shape(srv) +
  tm_borders(col = "black", lwd = 3,
             legend.show = FALSE) +
  tm_add_legend(type = "fill", labels = labels, 
                fill = whp_colors, title = "Wildfire Hazard Potential") +
  tm_layout(frame = FALSE)
  
```

