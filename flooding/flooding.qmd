---
title: "Calculating the percentage of school district area within a high risk flood zone"
format: html
author: "Charlie Curtin"
---

```{r, message = FALSE}
# load packages
library(tidyverse)
library(sf)
library(here)
```

# Working with 2024 FEMA flood risk zones

To describe flooding, we use FEMA's 2024 National Flood Hazard Layer (NFHL), which uses information about past flooding events, topography, hydrology, rainfall patterns, and other relevant factors to identify flood-prone areas and establish flood zones. The NFHL defines flood risk as low, moderate, and high, with further subcategories in each of these in the data. The goal of using this dataset is to determine the percentage of area of each school district that falls within a high risk flood zone. We retrieve the data for California as a layer in a geodatabase.

```{r}
# read in CA flood risk data
flood_risk_ca <- st_read(here("data", "flooding", "raw", "NFHL_06_20240401.gdb"),
                         layer = "S_FLD_HAZ_AR",
                         quiet = TRUE)

# read in school districts
districts <- st_read(here("data", "school_districts"), quiet = TRUE)
```

According to the NFHL documentation, Special Flood Hazard Areas are high risk flood zones. In the subcategories, these are any zones that begin with an "A" or "V". To select high risk flood zones, we select any polygons where the "FLD_ZONE" field contains these letters. Then, we find the intersections between school district polygons and high risk flood zones. Similar to the intersection process with sea level rise, we are left with polygons that have the CDSCode of the district they intersect with attached to them. If multiple flooding polygons fall within one school district, then they have that one CDSCode attached to all of them. To find the sum of high risk flood zone area of these polygons, we group by CDSCode and find a sum. Then, each CDSCode has a high risk flood zone area associated with it, which can be joined back to the school districts dataframe.

Since we don't have historical data for FEMA flood zones, there is no baseline for comparison.

```{r}
# set the crs to be the same in the flood risk and the school districts
flood_risk_ca <- st_transform(flood_risk_ca, crs = st_crs(districts))

# filter to high risk flood zones
high_risk <- flood_risk_ca %>% 
  mutate(flood_risk = ifelse(str_detect(FLD_ZONE, "A"), "high", NA)) %>% 
  filter(flood_risk == "high")

# test
test <- flood_risk_ca %>% 
  mutate(flood_risk = ifelse(str_detect(FLD_ZONE, "A|V"), "high", NA)) %>% 
  filter(flood_risk == "high")

# find intersection between districts and high risk flood zones
districts_high <- st_intersection(districts, high_risk)

# find area of each high risk flood polygon
districts_high$flood_area <- st_area(districts_high)

# find area of each school district
districts$area <- st_area(districts)

## join the two together
# select only necessary columns to join, group by CDSCode (unique id for districts), and summarize all of the high risk flood areas for each CDSCode
districts_high <- districts_high %>% 
  select(CDSCode, flood_area) %>% 
  group_by(CDSCode) %>% 
  summarise(flood_area = sum(flood_area))

# join high risk with schools to find percentage of area
flood_join <- full_join(districts %>% as.data.frame(),
                       districts_high %>% as.data.frame(),
                       by = "CDSCode", keep = FALSE) %>%
  mutate(area = as.numeric(area), # convert areas to numeric, dropping the units
         flood_area = as.numeric(flood_area)) %>%
  mutate(flood_area = replace_na(flood_area, 0)) %>% # replace NAs with 0s
  mutate(flood_percent = (flood_area / area) * 100) %>% # calculate sea level rise inundation percentage
  st_sf(sf_column_name = "geometry.x")

# select relevant information and export to data folder for hazard summary calculation
high_flood_districts <- flood_join %>% 
  select(CDSCode, CountyName, DistrictNa, DistrictTy, flood_percent) %>% 
  st_drop_geometry()

#write_csv(high_flood_districts, here("data", "hazard_summary", "individual_tables", "districts_flood.csv"))
```

## preparing data for mapping

```{r}
# simplify high risk flood polygons
flooding_simple <- st_simplify(high_risk, dTolerance = 200)

# write to data folder
st_write(flooding_simple, here("data", "flooding", "intermediate", "flooding_simple.shp"))
```


